/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package tutoriales.liferay.servicebuilder.libro.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.exportimport.kernel.lar.StagedModelType;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import tutoriales.liferay.servicebuilder.libro.model.Libro;
import tutoriales.liferay.servicebuilder.libro.model.LibroModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the Libro service. Represents a row in the &quot;LIBRO_Libro&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link LibroModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link LibroImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see LibroImpl
 * @see Libro
 * @see LibroModel
 * @generated
 */
@ProviderType
public class LibroModelImpl extends BaseModelImpl<Libro> implements LibroModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a libro model instance should use the {@link Libro} interface instead.
	 */
	public static final String TABLE_NAME = "LIBRO_Libro";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "libroId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "titulo", Types.VARCHAR },
			{ "escritor", Types.VARCHAR },
			{ "publicacion", Types.TIMESTAMP }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("uuid_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("libroId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("titulo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("escritor", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("publicacion", Types.TIMESTAMP);
	}

	public static final String TABLE_SQL_CREATE = "create table LIBRO_Libro (uuid_ VARCHAR(75) null,libroId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,titulo VARCHAR(75) null,escritor VARCHAR(75) null,publicacion DATE null)";
	public static final String TABLE_SQL_DROP = "drop table LIBRO_Libro";
	public static final String ORDER_BY_JPQL = " ORDER BY libro.titulo ASC, libro.escritor ASC";
	public static final String ORDER_BY_SQL = " ORDER BY LIBRO_Libro.titulo ASC, LIBRO_Libro.escritor ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(tutoriales.liferay.servicebuilder.libro.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.tutoriales.liferay.servicebuilder.libro.model.Libro"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(tutoriales.liferay.servicebuilder.libro.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.tutoriales.liferay.servicebuilder.libro.model.Libro"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(tutoriales.liferay.servicebuilder.libro.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.tutoriales.liferay.servicebuilder.libro.model.Libro"),
			true);
	public static final long COMPANYID_COLUMN_BITMASK = 1L;
	public static final long GROUPID_COLUMN_BITMASK = 2L;
	public static final long TITULO_COLUMN_BITMASK = 4L;
	public static final long UUID_COLUMN_BITMASK = 8L;
	public static final long ESCRITOR_COLUMN_BITMASK = 16L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(tutoriales.liferay.servicebuilder.libro.service.util.ServiceProps.get(
				"lock.expiration.time.tutoriales.liferay.servicebuilder.libro.model.Libro"));

	public LibroModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _libroId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setLibroId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _libroId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Libro.class;
	}

	@Override
	public String getModelClassName() {
		return Libro.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("libroId", getLibroId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("titulo", getTitulo());
		attributes.put("escritor", getEscritor());
		attributes.put("publicacion", getPublicacion());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long libroId = (Long)attributes.get("libroId");

		if (libroId != null) {
			setLibroId(libroId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String titulo = (String)attributes.get("titulo");

		if (titulo != null) {
			setTitulo(titulo);
		}

		String escritor = (String)attributes.get("escritor");

		if (escritor != null) {
			setEscritor(escritor);
		}

		Date publicacion = (Date)attributes.get("publicacion");

		if (publicacion != null) {
			setPublicacion(publicacion);
		}
	}

	@Override
	public String getUuid() {
		if (_uuid == null) {
			return StringPool.BLANK;
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@Override
	public long getLibroId() {
		return _libroId;
	}

	@Override
	public void setLibroId(long libroId) {
		_libroId = libroId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException pe) {
			return StringPool.BLANK;
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		_modifiedDate = modifiedDate;
	}

	@Override
	public String getTitulo() {
		if (_titulo == null) {
			return StringPool.BLANK;
		}
		else {
			return _titulo;
		}
	}

	@Override
	public void setTitulo(String titulo) {
		_columnBitmask = -1L;

		if (_originalTitulo == null) {
			_originalTitulo = _titulo;
		}

		_titulo = titulo;
	}

	public String getOriginalTitulo() {
		return GetterUtil.getString(_originalTitulo);
	}

	@Override
	public String getEscritor() {
		if (_escritor == null) {
			return StringPool.BLANK;
		}
		else {
			return _escritor;
		}
	}

	@Override
	public void setEscritor(String escritor) {
		_columnBitmask = -1L;

		_escritor = escritor;
	}

	@Override
	public Date getPublicacion() {
		return _publicacion;
	}

	@Override
	public void setPublicacion(Date publicacion) {
		_publicacion = publicacion;
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(PortalUtil.getClassNameId(
				Libro.class.getName()));
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			Libro.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Libro toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Libro)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		LibroImpl libroImpl = new LibroImpl();

		libroImpl.setUuid(getUuid());
		libroImpl.setLibroId(getLibroId());
		libroImpl.setGroupId(getGroupId());
		libroImpl.setCompanyId(getCompanyId());
		libroImpl.setUserId(getUserId());
		libroImpl.setUserName(getUserName());
		libroImpl.setCreateDate(getCreateDate());
		libroImpl.setModifiedDate(getModifiedDate());
		libroImpl.setTitulo(getTitulo());
		libroImpl.setEscritor(getEscritor());
		libroImpl.setPublicacion(getPublicacion());

		libroImpl.resetOriginalValues();

		return libroImpl;
	}

	@Override
	public int compareTo(Libro libro) {
		int value = 0;

		value = getTitulo().compareTo(libro.getTitulo());

		if (value != 0) {
			return value;
		}

		value = getEscritor().compareTo(libro.getEscritor());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Libro)) {
			return false;
		}

		Libro libro = (Libro)obj;

		long primaryKey = libro.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		LibroModelImpl libroModelImpl = this;

		libroModelImpl._originalUuid = libroModelImpl._uuid;

		libroModelImpl._originalGroupId = libroModelImpl._groupId;

		libroModelImpl._setOriginalGroupId = false;

		libroModelImpl._originalCompanyId = libroModelImpl._companyId;

		libroModelImpl._setOriginalCompanyId = false;

		libroModelImpl._setModifiedDate = false;

		libroModelImpl._originalTitulo = libroModelImpl._titulo;

		libroModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<Libro> toCacheModel() {
		LibroCacheModel libroCacheModel = new LibroCacheModel();

		libroCacheModel.uuid = getUuid();

		String uuid = libroCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			libroCacheModel.uuid = null;
		}

		libroCacheModel.libroId = getLibroId();

		libroCacheModel.groupId = getGroupId();

		libroCacheModel.companyId = getCompanyId();

		libroCacheModel.userId = getUserId();

		libroCacheModel.userName = getUserName();

		String userName = libroCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			libroCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			libroCacheModel.createDate = createDate.getTime();
		}
		else {
			libroCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			libroCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			libroCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		libroCacheModel.titulo = getTitulo();

		String titulo = libroCacheModel.titulo;

		if ((titulo != null) && (titulo.length() == 0)) {
			libroCacheModel.titulo = null;
		}

		libroCacheModel.escritor = getEscritor();

		String escritor = libroCacheModel.escritor;

		if ((escritor != null) && (escritor.length() == 0)) {
			libroCacheModel.escritor = null;
		}

		Date publicacion = getPublicacion();

		if (publicacion != null) {
			libroCacheModel.publicacion = publicacion.getTime();
		}
		else {
			libroCacheModel.publicacion = Long.MIN_VALUE;
		}

		return libroCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(23);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", libroId=");
		sb.append(getLibroId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", titulo=");
		sb.append(getTitulo());
		sb.append(", escritor=");
		sb.append(getEscritor());
		sb.append(", publicacion=");
		sb.append(getPublicacion());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(37);

		sb.append("<model><model-name>");
		sb.append("tutoriales.liferay.servicebuilder.libro.model.Libro");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>libroId</column-name><column-value><![CDATA[");
		sb.append(getLibroId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>titulo</column-name><column-value><![CDATA[");
		sb.append(getTitulo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>escritor</column-name><column-value><![CDATA[");
		sb.append(getEscritor());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>publicacion</column-name><column-value><![CDATA[");
		sb.append(getPublicacion());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = Libro.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			Libro.class
		};
	private String _uuid;
	private String _originalUuid;
	private long _libroId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _titulo;
	private String _originalTitulo;
	private String _escritor;
	private Date _publicacion;
	private long _columnBitmask;
	private Libro _escapedModel;
}